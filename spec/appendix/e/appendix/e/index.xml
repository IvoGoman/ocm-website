<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>/appendix/E on</title><link>https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/e/appendix/e/</link><description>Recent content in /appendix/E on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/e/appendix/e/index.xml" rel="self" type="application/rss+xml"/><item><title>blob</title><link>https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/E/blob/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/E/blob/</guid><description>blob — Anonymous untyped blob data # A blob just represents any data without a dedicated logical type.
The media type is used to define the logical and/or technical format of the byte-stream represented by the blob</description></item><item><title>blueprint</title><link>https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/E/blueprint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/E/blueprint/</guid><description>blueprint — Landscaper Installation Blueprint # An installation description for the landscaper installation environment.</description></item><item><title>fileSystem</title><link>https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/E/fileSystem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/E/fileSystem/</guid><description>fileSystem — Filesystem Content # Filesystem content represented in tar format.
The media type SHOULD be application/x-tar or for content compressed with GNU Zip application/gzip, application/x-gzip, application/x-gtar, and application/x-tgz or application/x-tar+gzip.</description></item><item><title>gitOpsTemplate</title><link>https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/E/gitOpsTemplate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/E/gitOpsTemplate/</guid><description>gitOpstemplate — Filesystem Content as GitOps Template # A filesystem content intended to be used as Git Opts Template. Such an artefact should be used in sequence of successive versions that can be used by a 3-way merge to be merged with an instance specific Git Ops Repository content (for example via GitHub Pull Requests).</description></item><item><title>helmChart</title><link>https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/E/helmChart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/E/helmChart/</guid><description>helmChart — Kubernetes Helm Chart # A Kubernetes installation resource representing a Helm chart, either stored as OCI artifact or as tar blob.
Format Variants # So far, two technical representations are supported:
OCI Artifact
If stored as OCI artifact, the access type MUST either be ociArtefact or the OCI artefact blob format must be used with an appropriate media type.
Helm Tar Archive
If stored in the Helm tar format (for the filesystem), the tar media type MUST be used.</description></item><item><title>ociArtefact</title><link>https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/E/ociArtefact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/E/ociArtefact/</guid><description>ociArtefact — General OCI Artifact or Artifact Index # Format Variants # When provided as a blob, the Artifact Set Format MUST be used to represent the content of the OCI artifact. THis format can be used to store multiple versions of on OCI repository in a filesystem-compatible manner. In this scenario only the single version of interest is stored.
Provided blobs use the following media type:
application/vnd.oci.image.manifest.v1+tar+gzip: OCI image manifests application/vnd.</description></item><item><title>ociImage</title><link>https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/E/ociImage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/E/ociImage/</guid><description>ociImage — OCI Image or Image Index # An OCI artifact that contains an OCI container image. The content is intended to be used as container image.
A general ociArtefact may describe any kind of content, depending on the media type of its config blob (see also helmChart).
ociImage is a dedicated variant for the container image media types.
Format Variants # As special case for a general ociArtefact is uses the ociArtefact blob format.</description></item><item><title>toiExecutor</title><link>https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/E/toiExecutor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/E/toiExecutor/</guid><description>toiExecutor — Tiny OCM Installer # TOI is a small toolset on top of the Open Component Model. It provides a possibility to run images taken from a component version with user configuration and feed them with the content of this component version. It is some basic mechanism which can be used to execute simple installation steps based on content described by the Open Component Model (see https://github.com/gardener/ocm/docs/reference/ocm_toi-bootstrapping.md).
A TOI executor is YAML resource describing the features of an TOI executor image.</description></item><item><title>toiPackage</title><link>https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/E/toiPackage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://symmetrical-broccoli-b4446266.pages.github.io/spec/appendix/E/toiPackage/</guid><description>toiPackage — Tiny OCM Installer Package # TOI is a small toolset on top of the Open Component Model. It provides a possibility to run images taken from a component version with user configuration and feed them with the content of this component version. It is some basic mechanism which can be used to execute simple installation steps based on content described by the Open Component Model (see https://github.com/gardener/ocm/docs/reference/ocm_toi-bootstrapping.md).
A TOI package is YAML resource describing the installation handling for a dedicated software package based on one or more toiExecutors.</description></item></channel></rss>