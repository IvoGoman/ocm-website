<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Guides on</title><link>https://symmetrical-broccoli-b4446266.pages.github.io/docs/guides/</link><description>Recent content in Guides on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 12 Aug 2022 10:36:48 +0100</lastBuildDate><atom:link href="https://symmetrical-broccoli-b4446266.pages.github.io/docs/guides/index.xml" rel="self" type="application/rss+xml"/><item><title>Structuring Software with OCM</title><link>https://symmetrical-broccoli-b4446266.pages.github.io/docs/guides/structuring-software-with-ocm/</link><pubDate>Fri, 12 Aug 2022 10:36:48 +0100</pubDate><guid>https://symmetrical-broccoli-b4446266.pages.github.io/docs/guides/structuring-software-with-ocm/</guid><description>Software products are divided into logical units, which are called components in this specification. For example, a frontend, a backend and some monitoring stack. The software product itself could be seen as a component comprising the other three components.
As a result of the development phase, component versions are created, e.g. when you make a new release of a component.
A component version consists of a set of technical artifacts, e.</description></item></channel></rss>