<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>transfer on</title><link>https://symmetrical-broccoli-b4446266.pages.github.io/docs/cli/transfer/</link><description>Recent content in transfer on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 24 Aug 2022 18:41:47 +0100</lastBuildDate><atom:link href="https://symmetrical-broccoli-b4446266.pages.github.io/docs/cli/transfer/index.xml" rel="self" type="application/rss+xml"/><item><title>artefacts</title><link>https://symmetrical-broccoli-b4446266.pages.github.io/docs/cli/transfer/artefacts/</link><pubDate>Wed, 24 Aug 2022 18:41:47 +0100</pubDate><guid>https://symmetrical-broccoli-b4446266.pages.github.io/docs/cli/transfer/artefacts/</guid><description>Usage # ocm transfer artefacts [&amp;lt;options&amp;gt;] {&amp;lt;artefact-reference&amp;gt;} Description # Transfer OCI artefacts from one registry to another one
If the repository/registry option is specified, the given names are interpreted relative to the specified registry using the syntax
&amp;lt;OCI repository name>[:&amp;lt;tag>][@&amp;lt;digest>] If no &amp;ndash;repo option is specified the given names are interpreted as extended CI artefact references.
[&amp;lt;repo type>::]&amp;lt;host>[:&amp;lt;port>]/&amp;lt;OCI repository name>[:&amp;lt;tag>][@&amp;lt;digest>] The &amp;ndash;repo option takes a repository/OCI registry specification:
[&amp;lt;repo type>::]&amp;lt;configured name>|&amp;lt;file path>|&amp;lt;spec json> For the Common Transport Format the types directory, tar or tgz are possible.</description></item><item><title>commontransportarchive</title><link>https://symmetrical-broccoli-b4446266.pages.github.io/docs/cli/transfer/commontransportarchive/</link><pubDate>Wed, 24 Aug 2022 18:41:47 +0100</pubDate><guid>https://symmetrical-broccoli-b4446266.pages.github.io/docs/cli/transfer/commontransportarchive/</guid><description>Usage # ocm transfer commontransportarchive [&amp;lt;options&amp;gt;] &amp;lt;ctf&amp;gt; &amp;lt;target&amp;gt; Description # Transfer content of a Common Transport Archive to the given target repository.
The &amp;ndash;type option accepts a file format for the target archive to use. The following formats are supported:
directory tar tgz The default format is directory. It the option &amp;ndash;overwrite is given, component version in the target repository will be overwritten, if they already exist.
It the option &amp;ndash;resourcesByValue is given, all referential resources will potentially be localized, mapped to component version local resources in the target repository.</description></item><item><title>componentarchive</title><link>https://symmetrical-broccoli-b4446266.pages.github.io/docs/cli/transfer/componentarchive/</link><pubDate>Wed, 24 Aug 2022 18:41:47 +0100</pubDate><guid>https://symmetrical-broccoli-b4446266.pages.github.io/docs/cli/transfer/componentarchive/</guid><description>Usage # ocm transfer componentarchive [&amp;lt;options&amp;gt;] &amp;lt;source&amp;gt; &amp;lt;target&amp;gt; Description # Transfer a component archive to some component repository. This might be a CTF Archive or a regular repository. If the type CTF is specified the target must already exist, if CTF flavor is specified it will be created if it does not exist.
Besides those explicitly known types a complete repository spec might be configured, either via inline argument or command configuration file and name.</description></item><item><title>componentversions</title><link>https://symmetrical-broccoli-b4446266.pages.github.io/docs/cli/transfer/componentversions/</link><pubDate>Wed, 24 Aug 2022 18:41:47 +0100</pubDate><guid>https://symmetrical-broccoli-b4446266.pages.github.io/docs/cli/transfer/componentversions/</guid><description>Usage # ocm transfer componentversions [&amp;lt;options&amp;gt;] {&amp;lt;component-reference&amp;gt;} &amp;lt;target&amp;gt; Description # Transfer all component versions specified to the given target repository. If only a component (instead of a component version) is specified all versions are transferred.
If the &amp;ndash;repo option is specified, the given names are interpreted relative to the specified repository using the syntax
&amp;lt;component>[:&amp;lt;version>] If no &amp;ndash;repo option is specified the given names are interpreted as located OCM component version references:</description></item></channel></rss>