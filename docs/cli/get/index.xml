<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>get on</title><link>https://ocm.software/docs/cli/get/</link><description>Recent content in get on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 24 Jan 2023 12:26:09 +0000</lastBuildDate><atom:link href="https://ocm.software/docs/cli/get/index.xml" rel="self" type="application/rss+xml"/><item><title>artifacts</title><link>https://ocm.software/docs/cli/get/artifacts/</link><pubDate>Tue, 24 Jan 2023 12:26:09 +0000</pubDate><guid>https://ocm.software/docs/cli/get/artifacts/</guid><description>Usage # ocm get artifacts [&amp;lt;options&amp;gt;] {&amp;lt;artifact-reference&amp;gt;} Options # -a, --attached show attached artifacts -h, --help help for artifacts -o, --output string output mode (JSON, json, tree, wide, yaml) -r, --recursive follow index nesting --repo string repository name or spec -s, --sort stringArray sort fields Description # Get lists all artifact versions specified, if only a repository is specified all tagged artifacts are listed.
If the repository/registry option is specified, the given names are interpreted relative to the specified registry using the syntax</description></item><item><title>componentversions</title><link>https://ocm.software/docs/cli/get/componentversions/</link><pubDate>Tue, 24 Jan 2023 12:26:09 +0000</pubDate><guid>https://ocm.software/docs/cli/get/componentversions/</guid><description>Usage # ocm get componentversions [&amp;lt;options&amp;gt;] {&amp;lt;component-reference&amp;gt;} Options # -c, --constraints constraints version constraint -h, --help help for componentversions --latest restrict component versions to latest --lookup stringArray repository name or spec for closure lookup fallback -o, --output string output mode (JSON, json, tree, wide, yaml) -r, --recursive follow component reference nesting --repo string repository name or spec -S, --scheme string schema version -s, --sort stringArray sort fields Description # Get lists all component versions specified, if only a component is specified all versions are listed.</description></item><item><title>credentials</title><link>https://ocm.software/docs/cli/get/credentials/</link><pubDate>Tue, 24 Jan 2023 12:26:09 +0000</pubDate><guid>https://ocm.software/docs/cli/get/credentials/</guid><description>Usage # ocm get credentials {&amp;lt;consumer property&amp;gt;=&amp;lt;value&amp;gt;} Options # -h, --help help for credentials -m, --matcher string matcher type override Description # Try to resolve a given consumer specification against the configured credential settings and show the found credential attributes.
For the following usage contexts with matchers and standard identity matchers exist:
Buildcredentials.ocm.software: Gardener config credential matcher
It matches the Buildcredentials.ocm.software consumer type and additionally acts like the hostpath type.</description></item><item><title>plugins</title><link>https://ocm.software/docs/cli/get/plugins/</link><pubDate>Tue, 24 Jan 2023 12:26:09 +0000</pubDate><guid>https://ocm.software/docs/cli/get/plugins/</guid><description>Usage # ocm get plugins [&amp;lt;options&amp;gt;] {&amp;lt;plugin name&amp;gt;} Options # -h, --help help for plugins -o, --output string output mode (JSON, json, wide, yaml) -s, --sort stringArray sort fields Description # Get lists information for all plugins specified, if no plugin is specified all registered ones are listed.
With the option &amp;ndash;output the output mode can be selected. The following modes are supported:
JSON json wide yaml Examples # $ ocm get plugins $ ocm get plugins demo -o yaml See Also # ocm get â€” Get information about artifacts and components</description></item><item><title>references</title><link>https://ocm.software/docs/cli/get/references/</link><pubDate>Tue, 24 Jan 2023 12:26:09 +0000</pubDate><guid>https://ocm.software/docs/cli/get/references/</guid><description>Usage # ocm get references [&amp;lt;options&amp;gt;] &amp;lt;component&amp;gt; {&amp;lt;name&amp;gt; { &amp;lt;key&amp;gt;=&amp;lt;value&amp;gt; }} Options # -c, --constraints constraints version constraint -h, --help help for references --latest restrict component versions to latest --lookup stringArray repository name or spec for closure lookup fallback -o, --output string output mode (JSON, json, tree, wide, yaml) -r, --recursive follow component reference nesting --repo string repository name or spec -s, --sort stringArray sort fields Description # Get references of a component version.</description></item><item><title>resources</title><link>https://ocm.software/docs/cli/get/resources/</link><pubDate>Tue, 24 Jan 2023 12:26:09 +0000</pubDate><guid>https://ocm.software/docs/cli/get/resources/</guid><description>Usage # ocm get resources [&amp;lt;options&amp;gt;] &amp;lt;component&amp;gt; {&amp;lt;name&amp;gt; { &amp;lt;key&amp;gt;=&amp;lt;value&amp;gt; }} Options # -c, --constraints constraints version constraint -h, --help help for resources --latest restrict component versions to latest --lookup stringArray repository name or spec for closure lookup fallback -o, --output string output mode (JSON, json, tree, treewide, wide, yaml) -r, --recursive follow component reference nesting --repo string repository name or spec -s, --sort stringArray sort fields Description # Get resources of a component version.</description></item><item><title>sources</title><link>https://ocm.software/docs/cli/get/sources/</link><pubDate>Tue, 24 Jan 2023 12:26:09 +0000</pubDate><guid>https://ocm.software/docs/cli/get/sources/</guid><description>Usage # ocm get sources [&amp;lt;options&amp;gt;] &amp;lt;component&amp;gt; {&amp;lt;name&amp;gt; { &amp;lt;key&amp;gt;=&amp;lt;value&amp;gt; }} Options # -c, --constraints constraints version constraint -h, --help help for sources --latest restrict component versions to latest --lookup stringArray repository name or spec for closure lookup fallback -o, --output string output mode (JSON, json, tree, wide, yaml) -r, --recursive follow component reference nesting --repo string repository name or spec -s, --sort stringArray sort fields Description # Get sources of a component version.</description></item></channel></rss>